// <auto-generated />
using System;
using DSS_Scoring.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DSS_Scoring.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DSS_Scoring.Models.Alternativa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdProyecto")
                        .HasColumnType("integer")
                        .HasColumnName("id_proyecto");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("alternativa_pkey");

                    b.HasIndex("IdProyecto");

                    b.ToTable("alternativa", (string)null);
                });

            modelBuilder.Entity("DSS_Scoring.Models.AlternativasFinales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdAlternativa")
                        .HasColumnType("integer")
                        .HasColumnName("id_alternativa");

                    b.Property<int?>("IdProyecto")
                        .HasColumnType("integer")
                        .HasColumnName("id_proyecto");

                    b.HasKey("Id")
                        .HasName("alternativas_finales_pkey");

                    b.HasIndex("IdAlternativa");

                    b.HasIndex("IdProyecto");

                    b.ToTable("alternativas_finales", (string)null);
                });

            modelBuilder.Entity("DSS_Scoring.Models.CategorizacionAlternativa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdAlternativa")
                        .HasColumnType("integer")
                        .HasColumnName("id_alternativa");

                    b.Property<int?>("IdProyecto")
                        .HasColumnType("integer")
                        .HasColumnName("id_proyecto");

                    b.Property<bool?>("Modificado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("modificado");

                    b.HasKey("Id")
                        .HasName("categorizacion_alternativas_pkey");

                    b.HasIndex("IdAlternativa");

                    b.HasIndex("IdProyecto");

                    b.ToTable("categorizacion_alternativas", (string)null);
                });

            modelBuilder.Entity("DSS_Scoring.Models.CategorizacionCriterio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdCriterio")
                        .HasColumnType("integer")
                        .HasColumnName("id_criterio");

                    b.Property<int?>("IdProyecto")
                        .HasColumnType("integer")
                        .HasColumnName("id_proyecto");

                    b.Property<bool?>("Modificado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("modificado");

                    b.HasKey("Id")
                        .HasName("categorizacion_criterios_pkey");

                    b.HasIndex("IdCriterio");

                    b.HasIndex("IdProyecto");

                    b.ToTable("categorizacion_criterios", (string)null);
                });

            modelBuilder.Entity("DSS_Scoring.Models.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<TimeOnly>("Hora")
                        .HasColumnType("time without time zone")
                        .HasColumnName("hora");

                    b.Property<int>("IdProyecto")
                        .HasColumnType("integer")
                        .HasColumnName("id_proyecto");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("integer")
                        .HasColumnName("id_usuario");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("mensaje");

                    b.HasKey("Id")
                        .HasName("chat_pkey");

                    b.HasIndex("IdProyecto");

                    b.HasIndex("IdUsuario");

                    b.ToTable("chat", (string)null);
                });

            modelBuilder.Entity("DSS_Scoring.Models.Criterio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdProyecto")
                        .HasColumnType("integer")
                        .HasColumnName("id_proyecto");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("criterio_pkey");

                    b.HasIndex("IdProyecto");

                    b.ToTable("criterio", (string)null);
                });

            modelBuilder.Entity("DSS_Scoring.Models.CriteriosFinales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdCriterio")
                        .HasColumnType("integer")
                        .HasColumnName("id_criterio");

                    b.Property<int?>("IdProyecto")
                        .HasColumnType("integer")
                        .HasColumnName("id_proyecto");

                    b.HasKey("Id")
                        .HasName("criterios_finales_pkey");

                    b.HasIndex("IdCriterio");

                    b.HasIndex("IdProyecto");

                    b.ToTable("criterios_finales", (string)null);
                });

            modelBuilder.Entity("DSS_Scoring.Models.FaseProceso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Activa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("activa");

                    b.Property<string>("Etapa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("etapa");

                    b.Property<int?>("IdFacilitador")
                        .HasColumnType("integer")
                        .HasColumnName("id_facilitador");

                    b.HasKey("Id")
                        .HasName("fase_proceso_pkey");

                    b.HasIndex("IdFacilitador");

                    b.ToTable("fase_proceso", (string)null);
                });

            modelBuilder.Entity("DSS_Scoring.Models.LluviaIdea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Etapa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("etapa");

                    b.Property<int?>("IdProyecto")
                        .HasColumnType("integer")
                        .HasColumnName("id_proyecto");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("integer")
                        .HasColumnName("id_usuario");

                    b.Property<string>("Idea")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("idea");

                    b.HasKey("Id")
                        .HasName("lluvia_ideas_pkey");

                    b.HasIndex("IdProyecto");

                    b.HasIndex("IdUsuario");

                    b.ToTable("lluvia_ideas", (string)null);
                });

            modelBuilder.Entity("DSS_Scoring.Models.PesoFinal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdCriterio")
                        .HasColumnType("integer")
                        .HasColumnName("id_criterio");

                    b.Property<int?>("IdProyecto")
                        .HasColumnType("integer")
                        .HasColumnName("id_proyecto");

                    b.Property<decimal>("Peso")
                        .HasColumnType("numeric")
                        .HasColumnName("peso");

                    b.HasKey("Id")
                        .HasName("peso_final_pkey");

                    b.HasIndex("IdCriterio");

                    b.HasIndex("IdProyecto");

                    b.ToTable("peso_final", (string)null);
                });

            modelBuilder.Entity("DSS_Scoring.Models.PesoPropuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdCriterio")
                        .HasColumnType("integer")
                        .HasColumnName("id_criterio");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric")
                        .HasColumnName("valor");

                    b.HasKey("Id")
                        .HasName("peso_propuesto_pkey");

                    b.HasIndex("IdCriterio");

                    b.ToTable("peso_propuesto", (string)null);
                });

            modelBuilder.Entity("DSS_Scoring.Models.Proyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdFacilitador")
                        .HasColumnType("integer")
                        .HasColumnName("id_facilitador");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Objetivo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("objetivo");

                    b.HasKey("Id")
                        .HasName("proyecto_pkey");

                    b.HasIndex("IdFacilitador");

                    b.ToTable("proyecto", (string)null);
                });

            modelBuilder.Entity("DSS_Scoring.Models.ProyectoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdProyecto")
                        .HasColumnType("integer")
                        .HasColumnName("id_proyecto");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("integer")
                        .HasColumnName("id_usuario");

                    b.HasKey("Id")
                        .HasName("proyecto_usuario_pkey");

                    b.HasIndex("IdProyecto");

                    b.HasIndex("IdUsuario");

                    b.ToTable("proyecto_usuario", (string)null);
                });

            modelBuilder.Entity("DSS_Scoring.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("password");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("rol");

                    b.HasKey("Id")
                        .HasName("usuario_pkey");

                    b.HasIndex(new[] { "Email" }, "usuario_email_key")
                        .IsUnique();

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("DSS_Scoring.Models.VotacionAlternativa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdAlternativa")
                        .HasColumnType("integer")
                        .HasColumnName("id_alternativa");

                    b.Property<int?>("IdProyecto")
                        .HasColumnType("integer")
                        .HasColumnName("id_proyecto");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("integer")
                        .HasColumnName("id_usuario");

                    b.Property<bool>("Voto")
                        .HasColumnType("boolean")
                        .HasColumnName("voto");

                    b.HasKey("Id")
                        .HasName("votacion_alternativa_pkey");

                    b.HasIndex("IdAlternativa");

                    b.HasIndex("IdProyecto");

                    b.HasIndex("IdUsuario");

                    b.ToTable("votacion_alternativa", (string)null);
                });

            modelBuilder.Entity("DSS_Scoring.Models.VotacionCriterio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdCriterio")
                        .HasColumnType("integer")
                        .HasColumnName("id_criterio");

                    b.Property<int?>("IdProyecto")
                        .HasColumnType("integer")
                        .HasColumnName("id_proyecto");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("integer")
                        .HasColumnName("id_usuario");

                    b.Property<bool>("Voto")
                        .HasColumnType("boolean")
                        .HasColumnName("voto");

                    b.HasKey("Id")
                        .HasName("votacion_criterio_pkey");

                    b.HasIndex("IdCriterio");

                    b.HasIndex("IdProyecto");

                    b.HasIndex("IdUsuario");

                    b.ToTable("votacion_criterio", (string)null);
                });

            modelBuilder.Entity("DSS_Scoring.Models.VotacionPeso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdPesoPropuesto")
                        .HasColumnType("integer")
                        .HasColumnName("id_peso_propuesto");

                    b.Property<int?>("IdProyecto")
                        .HasColumnType("integer")
                        .HasColumnName("id_proyecto");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("integer")
                        .HasColumnName("id_usuario");

                    b.Property<bool>("Voto")
                        .HasColumnType("boolean")
                        .HasColumnName("voto");

                    b.HasKey("Id")
                        .HasName("votacion_peso_pkey");

                    b.HasIndex("IdPesoPropuesto");

                    b.HasIndex("IdProyecto");

                    b.HasIndex("IdUsuario");

                    b.ToTable("votacion_peso", (string)null);
                });

            modelBuilder.Entity("DSS_Scoring.Models.Alternativa", b =>
                {
                    b.HasOne("DSS_Scoring.Models.Proyecto", "IdProyectoNavigation")
                        .WithMany("Alternativas")
                        .HasForeignKey("IdProyecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("alternativa_id_proyecto_fkey");

                    b.Navigation("IdProyectoNavigation");
                });

            modelBuilder.Entity("DSS_Scoring.Models.AlternativasFinales", b =>
                {
                    b.HasOne("DSS_Scoring.Models.Alternativa", "IdAlternativaNavigation")
                        .WithMany("AlternativasFinales")
                        .HasForeignKey("IdAlternativa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("alternativas_finales_id_alternativa_fkey");

                    b.HasOne("DSS_Scoring.Models.Proyecto", "IdProyectoNavigation")
                        .WithMany("AlternativasFinales")
                        .HasForeignKey("IdProyecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("alternativas_finales_id_proyecto_fkey");

                    b.Navigation("IdAlternativaNavigation");

                    b.Navigation("IdProyectoNavigation");
                });

            modelBuilder.Entity("DSS_Scoring.Models.CategorizacionAlternativa", b =>
                {
                    b.HasOne("DSS_Scoring.Models.Alternativa", "IdAlternativaNavigation")
                        .WithMany("CategorizacionAlternativas")
                        .HasForeignKey("IdAlternativa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("categorizacion_alternativas_id_alternativa_fkey");

                    b.HasOne("DSS_Scoring.Models.Proyecto", "IdProyectoNavigation")
                        .WithMany("CategorizacionAlternativas")
                        .HasForeignKey("IdProyecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("categorizacion_alternativas_id_proyecto_fkey");

                    b.Navigation("IdAlternativaNavigation");

                    b.Navigation("IdProyectoNavigation");
                });

            modelBuilder.Entity("DSS_Scoring.Models.CategorizacionCriterio", b =>
                {
                    b.HasOne("DSS_Scoring.Models.Criterio", "IdCriterioNavigation")
                        .WithMany("CategorizacionCriterios")
                        .HasForeignKey("IdCriterio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("categorizacion_criterios_id_criterio_fkey");

                    b.HasOne("DSS_Scoring.Models.Proyecto", "IdProyectoNavigation")
                        .WithMany("CategorizacionCriterios")
                        .HasForeignKey("IdProyecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("categorizacion_criterios_id_proyecto_fkey");

                    b.Navigation("IdCriterioNavigation");

                    b.Navigation("IdProyectoNavigation");
                });

            modelBuilder.Entity("DSS_Scoring.Models.Chat", b =>
                {
                    b.HasOne("DSS_Scoring.Models.Proyecto", "IdProyectoNavigation")
                        .WithMany("Chats")
                        .HasForeignKey("IdProyecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("chat_id_proyecto_fkey");

                    b.HasOne("DSS_Scoring.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Chats")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired()
                        .HasConstraintName("chat_id_usuario_fkey");

                    b.Navigation("IdProyectoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("DSS_Scoring.Models.Criterio", b =>
                {
                    b.HasOne("DSS_Scoring.Models.Proyecto", "IdProyectoNavigation")
                        .WithMany("Criterios")
                        .HasForeignKey("IdProyecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("criterio_id_proyecto_fkey");

                    b.Navigation("IdProyectoNavigation");
                });

            modelBuilder.Entity("DSS_Scoring.Models.CriteriosFinales", b =>
                {
                    b.HasOne("DSS_Scoring.Models.Criterio", "IdCriterioNavigation")
                        .WithMany("CriteriosFinales")
                        .HasForeignKey("IdCriterio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("criterios_finales_id_criterio_fkey");

                    b.HasOne("DSS_Scoring.Models.Proyecto", "IdProyectoNavigation")
                        .WithMany("CriteriosFinales")
                        .HasForeignKey("IdProyecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("criterios_finales_id_proyecto_fkey");

                    b.Navigation("IdCriterioNavigation");

                    b.Navigation("IdProyectoNavigation");
                });

            modelBuilder.Entity("DSS_Scoring.Models.FaseProceso", b =>
                {
                    b.HasOne("DSS_Scoring.Models.Usuario", "IdFacilitadorNavigation")
                        .WithMany("FaseProcesos")
                        .HasForeignKey("IdFacilitador")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fase_proceso_id_facilitador_fkey");

                    b.Navigation("IdFacilitadorNavigation");
                });

            modelBuilder.Entity("DSS_Scoring.Models.LluviaIdea", b =>
                {
                    b.HasOne("DSS_Scoring.Models.Proyecto", "IdProyectoNavigation")
                        .WithMany("LluviaIdeas")
                        .HasForeignKey("IdProyecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("lluvia_ideas_id_proyecto_fkey");

                    b.HasOne("DSS_Scoring.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("LluviaIdeas")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("lluvia_ideas_id_usuario_fkey");

                    b.Navigation("IdProyectoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("DSS_Scoring.Models.PesoFinal", b =>
                {
                    b.HasOne("DSS_Scoring.Models.Criterio", "IdCriterioNavigation")
                        .WithMany("PesosFinales")
                        .HasForeignKey("IdCriterio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("peso_final_id_criterio_fkey");

                    b.HasOne("DSS_Scoring.Models.Proyecto", "IdProyectoNavigation")
                        .WithMany("PesosFinales")
                        .HasForeignKey("IdProyecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("peso_final_id_proyecto_fkey");

                    b.Navigation("IdCriterioNavigation");

                    b.Navigation("IdProyectoNavigation");
                });

            modelBuilder.Entity("DSS_Scoring.Models.PesoPropuesto", b =>
                {
                    b.HasOne("DSS_Scoring.Models.Criterio", "IdCriterioNavigation")
                        .WithMany("PesosPropuestos")
                        .HasForeignKey("IdCriterio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("peso_propuesto_id_criterio_fkey");

                    b.Navigation("IdCriterioNavigation");
                });

            modelBuilder.Entity("DSS_Scoring.Models.Proyecto", b =>
                {
                    b.HasOne("DSS_Scoring.Models.Usuario", "IdFacilitadorNavigation")
                        .WithMany("Proyectos")
                        .HasForeignKey("IdFacilitador")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("proyecto_id_facilitador_fkey");

                    b.Navigation("IdFacilitadorNavigation");
                });

            modelBuilder.Entity("DSS_Scoring.Models.ProyectoUsuario", b =>
                {
                    b.HasOne("DSS_Scoring.Models.Proyecto", "IdProyectoNavigation")
                        .WithMany("ProyectoUsuarios")
                        .HasForeignKey("IdProyecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("proyecto_usuario_id_proyecto_fkey");

                    b.HasOne("DSS_Scoring.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("ProyectoUsuarios")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("proyecto_usuario_id_usuario_fkey");

                    b.Navigation("IdProyectoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("DSS_Scoring.Models.VotacionAlternativa", b =>
                {
                    b.HasOne("DSS_Scoring.Models.Alternativa", "IdAlternativaNavigation")
                        .WithMany("VotacionAlternativas")
                        .HasForeignKey("IdAlternativa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("votacion_alternativa_id_alternativa_fkey");

                    b.HasOne("DSS_Scoring.Models.Proyecto", "IdProyectoNavigation")
                        .WithMany("VotacionAlternativas")
                        .HasForeignKey("IdProyecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("votacion_alternativa_id_proyecto_fkey");

                    b.HasOne("DSS_Scoring.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("VotacionAlternativas")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("votacion_alternativa_id_usuario_fkey");

                    b.Navigation("IdAlternativaNavigation");

                    b.Navigation("IdProyectoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("DSS_Scoring.Models.VotacionCriterio", b =>
                {
                    b.HasOne("DSS_Scoring.Models.Criterio", "IdCriterioNavigation")
                        .WithMany("VotacionCriterios")
                        .HasForeignKey("IdCriterio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("votacion_criterio_id_criterio_fkey");

                    b.HasOne("DSS_Scoring.Models.Proyecto", "IdProyectoNavigation")
                        .WithMany("VotacionCriterios")
                        .HasForeignKey("IdProyecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("votacion_criterio_id_proyecto_fkey");

                    b.HasOne("DSS_Scoring.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("VotacionCriterios")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("votacion_criterio_id_usuario_fkey");

                    b.Navigation("IdCriterioNavigation");

                    b.Navigation("IdProyectoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("DSS_Scoring.Models.VotacionPeso", b =>
                {
                    b.HasOne("DSS_Scoring.Models.PesoPropuesto", "IdPesoPropuestoNavigation")
                        .WithMany("VotacionPesos")
                        .HasForeignKey("IdPesoPropuesto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("votacion_peso_id_peso_propuesto_fkey");

                    b.HasOne("DSS_Scoring.Models.Proyecto", "IdProyectoNavigation")
                        .WithMany("VotacionPesos")
                        .HasForeignKey("IdProyecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("votacion_peso_id_proyecto_fkey");

                    b.HasOne("DSS_Scoring.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("VotacionPesos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("votacion_peso_id_usuario_fkey");

                    b.Navigation("IdPesoPropuestoNavigation");

                    b.Navigation("IdProyectoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("DSS_Scoring.Models.Alternativa", b =>
                {
                    b.Navigation("AlternativasFinales");

                    b.Navigation("CategorizacionAlternativas");

                    b.Navigation("VotacionAlternativas");
                });

            modelBuilder.Entity("DSS_Scoring.Models.Criterio", b =>
                {
                    b.Navigation("CategorizacionCriterios");

                    b.Navigation("CriteriosFinales");

                    b.Navigation("PesosFinales");

                    b.Navigation("PesosPropuestos");

                    b.Navigation("VotacionCriterios");
                });

            modelBuilder.Entity("DSS_Scoring.Models.PesoPropuesto", b =>
                {
                    b.Navigation("VotacionPesos");
                });

            modelBuilder.Entity("DSS_Scoring.Models.Proyecto", b =>
                {
                    b.Navigation("Alternativas");

                    b.Navigation("AlternativasFinales");

                    b.Navigation("CategorizacionAlternativas");

                    b.Navigation("CategorizacionCriterios");

                    b.Navigation("Chats");

                    b.Navigation("Criterios");

                    b.Navigation("CriteriosFinales");

                    b.Navigation("LluviaIdeas");

                    b.Navigation("PesosFinales");

                    b.Navigation("ProyectoUsuarios");

                    b.Navigation("VotacionAlternativas");

                    b.Navigation("VotacionCriterios");

                    b.Navigation("VotacionPesos");
                });

            modelBuilder.Entity("DSS_Scoring.Models.Usuario", b =>
                {
                    b.Navigation("Chats");

                    b.Navigation("FaseProcesos");

                    b.Navigation("LluviaIdeas");

                    b.Navigation("ProyectoUsuarios");

                    b.Navigation("Proyectos");

                    b.Navigation("VotacionAlternativas");

                    b.Navigation("VotacionCriterios");

                    b.Navigation("VotacionPesos");
                });
#pragma warning restore 612, 618
        }
    }
}
